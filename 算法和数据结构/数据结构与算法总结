基本的数据结构：
    数组、列表、单链表、双端循环链表、队列、双端队列、栈、二叉树、堆、最大堆、二叉查找树、图

基本的算法：
    冒泡排序、选择排序、插入排序、归并排序(分治法)、快速排序、堆排序


ADT：
    1.如何选用恰当的数据结构作为存储？
    2.选取的数据结构能否满足 ADT 的功能需求
    3.实现效率如何？

数组、列表：线性结构，内存连续，下标访问

链表：(链式结构内存不连续的，而是一个个串起来的，这个时候就需要每个链接表的节点保存一个指向下一个节点的指针）
    (1) 单链表 -- 根节点(每一个节点包含value、next)其中节点的next指向下一个节点
                 其中 append、appendleft 的时间复杂度都是O(1); find、remove 都是O(n), 因为删除之前也需要查找、
                 而在单链表中查找只能从头遍历到尾，直到中间找到。
    (2) 双端循环链表 ---根节点(每一个节点包含value、prev、next)其prev指针指向前一个节点，根节点的prev指向尾节点；
                      next指针指向下一个节点，尾节点的next指针指向根节点，实现了链表的循环。
                      append, appendleft, remove(node) 都是O(1)

队列：FIFO 先进先出
栈： LIFO 后进先出